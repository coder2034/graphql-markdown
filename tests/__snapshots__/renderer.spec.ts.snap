// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderNode Directive should render Directive 1`] = `
"## DirectiveDefinition \`@auth\`

\`\`\`graphql
directive @auth
\`\`\`
"
`;

exports[`renderNode Enum should render Enum 1`] = `
"## EnumTypeDefinition \`MediaType\`

\`\`\`graphql
EnumTypeDefinition MediaType
\`\`\`
"
`;

exports[`renderNode Input should render Input 1`] = `
"## InputObjectTypeDefinition \`TweetContent\`

\`\`\`graphql
InputObjectTypeDefinition TweetContent
\`\`\`

### Fields

#### content (\`String\`)

#### body (\`String\`)
"
`;

exports[`renderNode Interface should render Interface 1`] = `
"## InterfaceTypeDefinition \`Node\`

\`\`\`graphql
InterfaceTypeDefinition Node
\`\`\`

### Fields

#### id (\`ID\`)
"
`;

exports[`renderNode Mutation should render Mutation 1`] = `
"## Mutation \`markTweetRead\`

\`\`\`graphql
mutation markTweetRead(
  id: ID!
): Boolean!
\`\`\`

### Arguments

#### id (\`ID\`)

### Type

#### [\`Boolean\`]
"
`;

exports[`renderNode Mutation should render Mutation with directive deprecated 1`] = `
"## Mutation \`markTweetRead\`

\`\`\`graphql
mutation markTweetRead(
  id: ID!
): Boolean!
\`\`\`

### Arguments

#### id (\`ID\`)

### Type

#### [\`Boolean\`]
"
`;

exports[`renderNode Object should render Object 1`] = `
"## ObjectTypeDefinition \`Media\`

\`\`\`graphql
ObjectTypeDefinition Media
\`\`\`

### Fields

#### url (\`Url\`)

#### sri (\`SRI\`)
"
`;

exports[`renderNode Query should render Query 1`] = `
"## Query \`Tweet\`

\`\`\`graphql
query Tweet(
  id: ID!
): Tweet
\`\`\`

### Arguments

#### id (\`ID\`)

### Type

#### [\`Tweet\`]
"
`;

exports[`renderNode Query should render Query with directive deprecated 1`] = `
"## Query \`Tweet\`

\`\`\`graphql
query Tweet(
  id: ID!
): Tweet
\`\`\`

### Arguments

#### id (\`ID\`)

### Type

#### [\`Tweet\`]
"
`;

exports[`renderNode Scalar should render Scalar with description supporting Markdown notation 1`] = `
"## ScalarTypeDefinition \`SRI\`

An \`integrity\` value beginning with at least one string, with each string including a prefix indicating a particular hash algorithm (e.g. \`sha256\`, \`sha384\`, \`sha512\`), followed by a dash \`-\`, and ending with the actual base64-encoded hash.

\`\`\`graphql
scalar SRI
\`\`\`
"
`;

exports[`renderNode Scalar should render Scalar with directive specifiedBy 1`] = `
"## ScalarTypeDefinition \`SRI\`

An \`integrity\` value beginning with at least one string, with each string including a prefix indicating a particular hash algorithm (e.g. \`sha256\`, \`sha384\`, \`sha512\`), followed by a dash \`-\`, and ending with the actual base64-encoded hash.

\`\`\`graphql
scalar SRI
\`\`\`
"
`;

exports[`renderNode Scalar should render Scalar without description 1`] = `
"## ScalarTypeDefinition \`SRI\`

\`\`\`graphql
scalar SRI
\`\`\`
"
`;

exports[`renderNode Subscription should render Subscription 1`] = `
"## Subscription \`Notifications\`

\`\`\`graphql
subscription Notifications(
  limit: Int!
): Notification[]!
\`\`\`

### Arguments

#### limit (\`Int\`)

### Type

#### [\`Notification\`]
"
`;

exports[`renderNode Subscription should render Subscription with directive deprecated 1`] = `
"## Subscription \`Notifications\`

\`\`\`graphql
subscription Notifications(
  limit: Int!
): Notification[]!
\`\`\`

### Arguments

#### limit (\`Int\`)

### Type

#### [\`Notification\`]
"
`;

exports[`renderNode Union should render Union 1`] = `
"## UnionTypeDefinition \`TweetResponse\`

\`\`\`graphql
UnionTypeDefinition TweetResponse
\`\`\`
"
`;
