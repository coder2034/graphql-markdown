import path from "path";
import { promises as fs } from "fs";

import type { Sidebar } from "@docusaurus/plugin-content-docs";

import prettier from "prettier";

import { PluginOptions } from "../type";

const SIDEBAR_FILE = "sidebar-schema.js";

const prettifyJavascript = (content: unknown): string => {
  const data = prettier.format(content as any, { parser: "babel" });
  return JSON.stringify(data, null, 2);
};

const prettifyMarkdown = (content: string): string => {
  return prettier.format(content, { parser: "markdown" });
};

const renderHomepage = async (
  homepageLocation: string,
  { rootPath }: PluginOptions
): Promise<string> => {
  const homepage = await fs.readFile(homepageLocation, "utf8");

  const filePath = path.join(rootPath, path.basename(homepageLocation));
  await fs.writeFile(filePath, prettifyMarkdown(homepage), "utf8");

  return path.relative("./", filePath);
};

const renderSidebar = async ({
  rootPath,
  baseURL,
}: PluginOptions): Promise<string> => {
  const sidebar: Record<string, Sidebar> = {
    schemaSidebar: [
      {
        type: "autogenerated",
        dirName: baseURL,
      },
    ],
  };

  const filePath = path.join(rootPath, SIDEBAR_FILE);
  await fs.writeFile(filePath, prettifyJavascript(sidebar), "utf8");

  return path.relative("./", filePath);
};

export const generateDocFromSchema = async (
  schemaLocation: string,
  options: PluginOptions
): Promise<{ pages: number; sidebar: string }> => {
  let pages: unknown[] = [];

  await renderHomepage(options.homepage, options);
  const sidebarPath = await renderSidebar(options);

  return { pages: pages.length, sidebar: sidebarPath };
};
